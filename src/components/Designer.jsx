/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useMemo } from 'react';
import { useAnimations, useFBX, useGLTF } from '@react-three/drei';

// --- 1. Create a new component for the Model itself ---
// This component assumes all assets are already loaded and passed in as props.
const Model = ({ animationName, ...props }) => {
  const group = useRef();
  const { nodes, materials, animations } = props;

  // useAnimations now receives the fully prepared animations
  const { actions } = useAnimations(animations, group);

  // The useEffect for controlling animations stays here.
  useEffect(() => {
    if (actions[animationName]) {
      actions[animationName].reset().fadeIn(0.5).play();
    }
    return () => {
      if (actions[animationName]) {
        actions[animationName].fadeOut(0.5);
      }
    };
  }, [animationName]);

  return (
    <group {...props} dispose={null} ref={group}>
      <skinnedMesh
        geometry={nodes.Alpha_Joints.geometry}
        material={materials['Alpha_Joints_MAT.001']}
        skeleton={nodes.Alpha_Joints.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Alpha_Surface.geometry}
        material={materials['Alpha_Body_MAT.001']}
        skeleton={nodes.Alpha_Surface.skeleton}
      />
      <primitive object={nodes.mixamorigHips} />
    </group>
  );
};

// --- 2. The main Designer component now only handles loading ---
const Designer = ({ animationName = 'idle', ...props }) => {
  // Load the main character model ONCE.
  const { nodes, materials } = useGLTF('assets/models/Char.glb');
  
  // Load the animations ONCE.
  const { animations: idleAnimation } = useFBX('assets/models/idle.fbx');
  const { animations: guitarAnimation } = useFBX('assets/models/guitar.fbx');
  const { animations: shyAnimation } = useFBX('assets/models/shy.fbx');
  const { animations: boxAnimation } = useFBX('assets/models/box.fbx');

  // useMemo ensures this setup logic runs only once.
  const animations = useMemo(() => {
    idleAnimation[0].name = 'idle';
    guitarAnimation[0].name = 'guitar';
    shyAnimation[0].name = 'shy';
    boxAnimation[0].name = 'box';
    return [idleAnimation[0], guitarAnimation[0], shyAnimation[0],boxAnimation[0]];
  }, []);

  // Pass the loaded assets and the changing animationName prop to the Model.
  return (
    <Model
      nodes={nodes}
      materials={materials}
      animations={animations}
      animationName={animationName}
      {...props}
    />
  );
};

// Preloading is still a good idea.
useGLTF.preload('assets/models/Char.glb');
useFBX.preload('assets/models/idle.fbx');
useFBX.preload('assets/models/guitar.fbx');
useFBX.preload('assets/models/shy.fbx');
useFBX.preload('assets/models/box.fbx');

export default Designer;